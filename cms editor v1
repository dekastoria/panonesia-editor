# Cetak Biru Pengembangan: CMS Tur Virtual Interaktif (Versi Realistis)

Dokumen ini merinci arsitektur, spesifikasi teknis, dan rencana pengembangan untuk membangun sebuah **Visual UI Builder** yang berfungsi sebagai CMS untuk *overlay* tur virtual. Versi ini difokuskan pada **kemudahan implementasi dan realisme** untuk mencapai produk fungsional (MVP) dengan cepat.



## 1. Tujuan Proyek (Project Goal)

Membangun aplikasi web yang memungkinkan pengguna merancang, mengelola, dan men-generate modul UI interaktif (pop-up, sidebar, galeri) secara visual. Output dari aplikasi ini adalah sebuah paket aset (`.zip`) yang dapat dengan mudah diintegrasikan ke dalam platform tur virtual pihak ketiga (seperti TDV Player) hanya dengan modifikasi minimal pada file `index.html` bawaan.



## 2. Arsitektur & Rekomendasi Stack

### 2.1. Filosofi Arsitektur: Hibrida yang Disederhanakan

Kita menggunakan pendekatan hibrida yang kuat dengan fokus pada kesederhanaan di sisi frontend.

-   **90% Pekerjaan Admin (CRUD Standar):** Ditangani oleh **Filament**. Ini adalah cara tercepat untuk membangun manajemen proyek dan aset.
-   **10% Pekerjaan Inti (Live Editor):** Ditangani oleh halaman **React** khusus, namun dengan desain antarmuka yang jauh lebih sederhana untuk mempermudah pengembangan.

### 2.2. Komponen Utama & Teknologi

| Komponen             | Teknologi yang Direkomendasikan                                              | Fungsi Utama                                                                 |
| -------------------- | ---------------------------------------------------------------------------- | ---------------------------------------------------------------------------- |
| **Backend & Admin** | `Laravel 12 + Filament 4`                                                    | Inti aplikasi, manajemen data, dan auto-generate halaman admin.              |
| **Manajemen Aset** | `Spatie Media Library` (Paket Laravel)                                       | Mengelola unggahan, penyimpanan, dan koleksi file (gambar, PDF, audio).      |
| **Editor Live** | Halaman khusus `React` (Vite atau Inertia.js)                                | Membangun antarmuka editor visual dengan **layout 2-panel yang sederhana**.  |
| **State Management** | `Zustand` (Pustaka React)                                                    | Mengelola state editor `config_json` secara efisien.                         |
| **UI Editor** | `TailwindCSS + shadcn/ui` (Komponen React)                                   | Membangun antarmuka panel editor yang modern dan responsif.                  |
| **Database** | `PostgreSQL` atau `MySQL`                                                    | Menyimpan semua data konfigurasi proyek, template, dan aset.               |
| **Ekspor ZIP** | `ZipStream` (`maennche/zipstream-php`)                                       | Men-generate file `.zip` secara *on-the-fly*.                                |
| **Infrastruktur** | `VPS (Virtual Private Server) + aaPanel`                                     | Hosting dan manajemen server.                                                |



## 3. Desain Database & Skema Data

-   **`projects`**: Menyimpan `config_json` utama.
-   **`project_versions`**: Untuk histori.
-   **`templates`**: Untuk skalabilitas di masa depan.
-   **`media`**: Dikelola oleh Spatie.

### `config_json` (Contoh)

```json
{
  "project": { "title": "Tur Virtual Kantor Pusat" },
  "background360": { "src": "/media/panos/lobby.jpg" },
  "elements": [
    { "id": "uuid-1", "type": "popup-image", "label": "Poster Acara", "src": "/media/images/poster.jpg" },
    { "id": "uuid-2", "type": "sidebar", "label": "Menu Utama", "items": [
      { "id": "uuid-3", "type": "link-to-popup", "label": "Lihat Poster", "targetId": "uuid-1" }
    ]}
  ],
  "customCode": { "html": "", "css": "", "js": "" }
}
```
